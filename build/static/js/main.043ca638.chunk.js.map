{"version":3,"sources":["api/index.js","store/actions/index.js","store/reducer/posts.js","store/reducer/comments.js","store/reducer/albums.js","store/index.js","components/Pagination.js","components/AlbumsCard/AlbumsCard.js","components/LMButton.js","components/Favorite/Favorite.js","components/Navigation.js","containers/Albums.js","components/Comments.js","components/Post/Post.js","utils/enums.js","components/Filters.js","Hooks/UseDebounce.js","components/PostscardPostsLists/PostscardPostsLists.js","components/PostslistsView.js","components/PostscardPostsgrid/PostscardPostsgrid.js","components/PostsgridView.js","containers/Posts.js","Hooks/ScrollToTop.js","App.js","index.js"],"names":["axios","create","baseURL","headers","SET_POSTS","SET_ALBUMS","SORT_POSTS","SEARCH_POSTS","TOGGLE_FAVORITE_POSTS","TOGGLE_FAVORITE_ALBUMS","GET_COMMENTS","CREATE_COMMENTS","toggleFavoritePostsRequest","id","favoritePost","dispatch","a","api","patch","then","response","type","payload","data","catch","error","console","log","toggleFavoriteAlbumsRequest","favoriteAlbum","initialState","posts","postsReducer","state","map","post","comments","commentsReducer","commentTitle","trim","email","author","albums","albumsReducer","album","rootReducer","combineReducers","createStore","applyMiddleware","thunk","Pagination","totalPosts","paginate","currentPage","pageNumbers","i","push","nextPage","parseInt","previousPage","className","uk-margin","onClick","href","e","preventDefault","uk-pagination-previous","number","uk-pagination-next","AlbumsCard","title","toggleFavorite","src","alt","uk-cover","width","height","uk-icon","React","memo","LMButton","props","addMoreCards","postsQuantityPage","postsOrAlbums","length","uk-spinner","Favorite","favoritePosts","connect","filter","favoriteAlbums","uk-navbar","location","pathname","uk-dropdown","uk-grid","mapDispatchToProps","useState","setCurrentPage","setPostsQuantityPage","indexOfLastPost","indexOfFirstPost","Math","ceil","currentPageCards","slice","toggleFavoriteAlbums","undefined","icon","FrownTwoTone","value","addCards","pageNumber","Comments","getCommentsRequest","get","createCommentsRequest","path","setAuthor","setEmail","setCommentTitle","useEffect","comment","onKeyPressDefault","charCode","postTitle","postBody","to","history","goBack","LeftCircleTwoTone","action","placeholder","required","onChange","target","onKeyPress","rows","viewStatus","getSearchPostsRequest","getSortPostsRequest","viewType","setViewType","setQuantityPosts","name","setName","isSearching","setIsSearching","orderValue","setOrderValue","setSearchResults","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","results","activeList","activeGrid","uk-search-icon","PostscardPostsLists","body","PostslistsView","PostscardPostsgrid","PostsgridView","toggleFavoritePosts","withRouter","unlisten","listen","window","scrollTo","getPostsRequest","getAlbumsRequest","errorFetch","setErrorFetch","favorite","status","subTitle","exact","component","Posts","Albums","Post","Uikit","use","Icons","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.043ca638.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  }\n});\n","import api from \"../../api/index\";\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const SET_ALBUMS = \"SET_ALBUMS\";\r\nexport const SORT_POSTS = \"SORT_POSTS\";\r\nexport const SEARCH_POSTS = \"SEARCH_POSTS\";\r\nexport const TOGGLE_FAVORITE_POSTS = \"TOGGLE_FAVORITE_POSTS\";\r\nexport const TOGGLE_FAVORITE_ALBUMS = \"TOGGLE_FAVORITE_ALBUMS\";\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const CREATE_COMMENTS = \"CREATE_COMMENTS\";\r\n\r\nexport const getPostsRequest = () => {\r\n  return async (dispatch) => {\r\n    await api.get(`/posts`)\r\n      .then(response => {\r\n        dispatch({ type: SET_POSTS, payload: response.data });\r\n      })\r\n  }\r\n}\r\n\r\nexport const getAlbumsRequest = () => {\r\n  return async (dispatch) => {\r\n    await api.get(`/albums`)\r\n      .then(response => {\r\n        dispatch({ type: SET_ALBUMS, payload: response.data });\r\n      })\r\n  }\r\n}\r\n\r\nexport const getSortPostsRequest = (value) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.get(`/posts?_sort=id&_order=${value}`);\r\n      dispatch({ type: SORT_POSTS, payload: response.data });\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSearchPostsRequest = (value) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.get(`/posts?title_like=${value}`);\r\n      dispatch({ type: SEARCH_POSTS, payload: response.data });\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleFavoritePostsRequest = (id, favoritePost) => {\r\n  return async (dispatch) => {\r\n    await api.patch(`/posts/${id}`, {\r\n      favoritePost,\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: TOGGLE_FAVORITE_POSTS, payload: response.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport const toggleFavoriteAlbumsRequest = (id, favoriteAlbum) => {\r\n  return async (dispatch) => {\r\n    await api.patch(`/albums/${id}`, {\r\n      favoriteAlbum,\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: TOGGLE_FAVORITE_ALBUMS, payload: response.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport const getCommentsRequest = () => {\r\n  return async (dispatch) => {\r\n    await api.get(`/comments`)\r\n      .then(response => {\r\n        dispatch({ type: GET_COMMENTS, payload: response.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport const createCommentsRequest = (payload) => {\r\n  return async (dispatch) => {\r\n    await api.post(`/comments`, {\r\n      path: location.pathname,\r\n      author: payload.author,\r\n      email: payload.email,\r\n      commentTitle: payload.commentTitle,\r\n      id: payload.id\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: CREATE_COMMENTS, payload: response.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n}\r\n","import {\r\n  SET_POSTS,\r\n  SORT_POSTS,\r\n  SEARCH_POSTS,\r\n  TOGGLE_FAVORITE_POSTS,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n}\r\n\r\nconst postsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_POSTS:\r\n      return { ...state, posts: payload };\r\n    case SORT_POSTS:\r\n      return { ...state, posts: payload };\r\n    case SEARCH_POSTS:\r\n      return { ...state, posts: payload };\r\n    case TOGGLE_FAVORITE_POSTS:\r\n      return {\r\n        ...state, posts: state.posts.map(post =>\r\n          (post.id === payload.id)\r\n            ? ({ ...post, favoritePost: payload.favoritePost })\r\n            : post)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postsReducer;","import {\r\n  GET_COMMENTS,\r\n  CREATE_COMMENTS\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n}\r\n\r\nconst commentsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_COMMENTS:\r\n      return { ...state, comments: payload };\r\n    case CREATE_COMMENTS:\r\n      return (payload.commentTitle.trim() && payload.email.trim() && payload.author.trim())\r\n        ? { ...state, comments: [...state.comments, payload] }\r\n        : state\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default commentsReducer;","import {\r\n  SET_ALBUMS,\r\n  TOGGLE_FAVORITE_ALBUMS,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  albums: [],\r\n}\r\n\r\nconst albumsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ALBUMS:\r\n      return { ...state, albums: payload };\r\n    case TOGGLE_FAVORITE_ALBUMS:\r\n      return {\r\n        ...state, albums: state.albums.map(album =>\r\n          (album.id === payload.id)\r\n            ? ({ ...album, favoriteAlbum: payload.favoriteAlbum })\r\n            : album)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default albumsReducer;","import { combineReducers } from \"redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport postsReducer from \"./reducer/posts\";\r\nimport commentsReducer from \"./reducer/comments\";\r\nimport albumsReducer from \"./reducer/albums\";\r\n\r\nconst rootReducer = combineReducers({ postsReducer, commentsReducer, albumsReducer });\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));","export function Pagination({\r\n  totalPosts,\r\n  paginate,\r\n  currentPage }) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPosts; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if ((parseInt(currentPage) + 1) <= totalPosts) {\r\n      return (parseInt(currentPage) + 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n\r\n  const previousPage = () => {\r\n    if ((parseInt(currentPage) - 1) >= 1) {\r\n      return (parseInt(currentPage) - 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n  return (\r\n    totalPosts > 0 && <ul\r\n      className=\"uk-pagination uk-flex-center uk-flex-middle\"\r\n      uk-margin=\"true\"\r\n    >\r\n      <li onClick={() => paginate(previousPage)}>\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-previous=\"true\"></span>\r\n        </a>\r\n      </li>\r\n      {pageNumbers.map((number) => (\r\n        <li key={number}\r\n          onClick={() => paginate(number)}\r\n          className={(number === currentPage)\r\n            ? \"uk-active\" : \"\"}>\r\n          {(number === currentPage)\r\n            ? <span >{number}</span>\r\n            : <a href=\"#\"\r\n              onClick={(e) => e.preventDefault()}>{number}</a>}\r\n        </li>\r\n      ))\r\n      }\r\n      {/* <li className=\"uk-disabled\"><span>...</span></li> */}\r\n      <li onClick={() => paginate(nextPage)} >\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-next=\"true\"></span>\r\n        </a>\r\n      </li>\r\n    </ul >\r\n  )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./AlbumsCard.css\";\r\nimport React from \"react\";\r\n\r\nfunction AlbumsCard({ title, id, toggleFavorite, favoriteAlbum }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n        <img\r\n          src=\"https://picsum.photos/600/400\"\r\n          alt=\"\"\r\n          uk-cover=\"true\"\r\n        />\r\n        <canvas width=\"600\" height=\"400\"></canvas>\r\n        <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n        <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n          <p>\r\n            {title}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"uk-position-top-right uk-overlay\">\r\n          <a href=\"\" uk-icon=\"icon: heart; ratio: 2\" onClick={onClickFavorite} className={favoriteAlbum ? \"uk-icon favorite-active\" : \"uk-icon\"}></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumsCard.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  favoriteAlbum: PropTypes.bool,\r\n  toggleFavoriteAlbums: PropTypes.func\r\n}\r\n\r\nexport default React.memo(AlbumsCard);","export function LMButton(props) {\r\n  const { addMoreCards,\r\n    postsQuantityPage,\r\n    postsOrAlbums } = props;\r\n  return (\r\n    postsOrAlbums.length > 0 && <div className=\"uk-margin\">\r\n      <button className=\"uk-button uk-button-primary \r\n      uk-width-1-1 uk-margin-small-bottom\"\r\n        onClick={() => addMoreCards(postsQuantityPage)}>\r\n        Load more{\" \"}\r\n        {postsOrAlbums < 1 && <div\r\n          className=\"uk-margin-small-left\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        >\r\n        </div>}\r\n      </button>\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction Favorite({ title, id, toggleFavorite, favoritePosts }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <th>{favoritePosts ? \"Post\" : \"Album\"}</th>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavorite(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavorite.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default Favorite;","import Favorite from \"./Favorite/Favorite\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Navigation(props) {\r\n  const { posts, albums,\r\n    toggleFavorite } = props;\r\n\r\n  const favoritePosts = posts.filter((post) => {\r\n    if (post.favoritePost) {\r\n      return post.favoritePost;\r\n    }\r\n  })\r\n\r\n  const favoriteAlbums = albums.filter((album) => {\r\n    if (album.favoriteAlbum) {\r\n      return album.favoriteAlbum;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={location.pathname === \"/\"\r\n            || location.pathname === \"/Postsgrid\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/\">Posts</a>\r\n          </li>\r\n          <li className={location.pathname === \"/Albums\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/Albums\">Albums</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className={favoritePosts.length || favoriteAlbums.length\r\n              ? \"uk-button favorite-active\" : \"uk-button\"}\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <div className=\"uk-width-large\" uk-dropdown=\"mode: click\">\r\n            <div\r\n              className=\"uk-dropdown-grid uk-child-width-1-1@m\"\r\n              uk-grid=\"true\"\r\n            >\r\n              <div>\r\n                <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Favorite</th>\r\n                      <th>Title</th>\r\n                      <th className=\"uk-text-right\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {favoritePosts?.map((post) => (\r\n                    <Favorite\r\n                      key={post.id}\r\n                      title={post.title}\r\n                      id={post.id}\r\n                      toggleFavorite={toggleFavorite}\r\n                      favoritePosts={favoritePosts}\r\n                    />\r\n                  ))}\r\n                  {favoriteAlbums?.map((album) => (\r\n                    <Favorite\r\n                      key={album.id}\r\n                      title={album.title}\r\n                      id={album.id}\r\n                      toggleFavorite={toggleFavorite}\r\n                    />\r\n                  ))\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.postsReducer.posts,\r\n    albums: state.albumsReducer.albums,\r\n  }\r\n}\r\n\r\n\r\nexport default React.memo(connect(mapStateToProps)(Navigation));","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Pagination } from \"../components/Pagination\";\r\nimport AlbumsCard from \"../components/AlbumsCard/AlbumsCard\";\r\nimport { LMButton } from \"../components/LMButton\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\nimport { toggleFavoriteAlbumsRequest } from \"../store/actions/index\"\r\n\r\nfunction Albums(props) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsQuantityPage, setPostsQuantityPage] = useState(6);\r\n\r\n  const { albums, toggleFavoriteAlbumsRequest } = props;\r\n  const indexOfLastPost = currentPage * postsQuantityPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsQuantityPage;\r\n  const totalPosts = Math.ceil(albums.length / postsQuantityPage);\r\n  const currentPageCards = albums.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const addMoreCards = (value) => {\r\n    const addCards = (parseInt(value) + 6);\r\n    setPostsQuantityPage(addCards);\r\n  }\r\n\r\n  const toggleFavoriteAlbums = (id) => {\r\n    albums?.map((album) => {\r\n      if (album.id === id && album.favoriteAlbum === undefined) {\r\n        album.favoriteAlbum = true;\r\n        toggleFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      } else if (album.id === id && album.favoriteAlbum === false) {\r\n        album.favoriteAlbum = true;\r\n        toggleFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      } else if (album.id === id && album.favoriteAlbum === true) {\r\n        album.favoriteAlbum = false;\r\n        toggleFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      }\r\n      return album;\r\n    })\r\n  }\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation\r\n        toggleFavorite={toggleFavoriteAlbums} />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {currentPageCards.length > 0 ?\r\n              currentPageCards?.map((album) => (\r\n                <AlbumsCard key={album.id}\r\n                  id={album.id}\r\n                  title={album.title}\r\n                  toggleFavorite={toggleFavoriteAlbums}\r\n                  favoriteAlbum={album.favoriteAlbum}\r\n                />\r\n              ))\r\n              : <div className=\"uk-align-center\">\r\n                <Result\r\n                  icon={<FrownTwoTone />}\r\n                  title=\"Sorry, albums not found.\"\r\n                />\r\n              </div>}\r\n          </div>\r\n          <LMButton\r\n            postsOrAlbums={albums}\r\n            postsQuantityPage={postsQuantityPage}\r\n            addMoreCards={addMoreCards} />\r\n          <Pagination\r\n            totalPosts={totalPosts}\r\n            paginate={paginate}\r\n            currentPage={currentPage} />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  albums: state.albumsReducer.albums,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleFavoriteAlbumsRequest,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Albums)","import PropTypes from \"prop-types\";\r\n\r\nfunction Comments({ author, email, commentTitle }) {\r\n  return (\r\n    <div className=\"uk-comments\">\r\n      <article className=\"uk-comment\">\r\n        <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n          <div className=\"uk-width-expand\">\r\n            <h4 className=\"uk-comment-title uk-margin-remove\">\r\n              <a className=\"uk-link-reset\"\r\n                href=\"#\"\r\n                onClick={(e) => e.preventDefault()}>\r\n                Author: {author}\r\n              </a>\r\n            </h4>\r\n            <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n              <li>\r\n                <a href=\"#\"\r\n                  onClick={(e) => e.preventDefault()}>\r\n                  Email: {email}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div className=\"uk-comment-body\">\r\n          <p>\r\n            {commentTitle}\r\n          </p>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nComments.propTypes = {\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  commentTitle: PropTypes.string,\r\n}\r\n\r\nexport default Comments;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Post.css\";\r\nimport Navigation from \"../Navigation\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Comments from \"../Comments\";\r\nimport {\r\n  getCommentsRequest,\r\n  createCommentsRequest\r\n} from \"../../store/actions/index\";\r\nimport { LeftCircleTwoTone } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nfunction Post(props) {\r\n  const { comments,\r\n    getCommentsRequest,\r\n    createCommentsRequest } = props;\r\n\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [commentTitle, setCommentTitle] = useState(\"\");\r\n\r\n  const onAddAuthor = (e) => (setAuthor(e.target.value));\r\n\r\n  const onAddEmail = (e) => (setEmail(e.target.value));\r\n\r\n  const onAddComment = (e) => (setCommentTitle(e.target.value));\r\n\r\n  const onClickDataSend = (e) => {\r\n    if (commentTitle.trim()\r\n      && email.trim()\r\n      && author.trim()) {\r\n      createCommentsRequest({\r\n        path: location.pathname,\r\n        author,\r\n        email,\r\n        commentTitle\r\n      })\r\n    }\r\n    setAuthor(\"\");\r\n    setEmail(\"\");\r\n    setCommentTitle(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommentsRequest();\r\n  }, []);\r\n\r\n  useEffect((comment) => {\r\n    if (comments.comment !== comments.comment) {\r\n      createCommentsRequest(comment);\r\n    }\r\n    return () => {\r\n      null;\r\n    }\r\n  }, []);\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    props.location.postTitle === undefined\r\n      || props.location.postBody === undefined\r\n      ? <Redirect to=\"/\" /> :\r\n      <main className=\"uk-main\">\r\n        <Navigation />\r\n        <div className=\"two-tone\">\r\n          <Button type=\"primary\"\r\n            onClick={() => props.history.goBack()}>\r\n            <LeftCircleTwoTone className=\"antd-back-icon\" />\r\n            BACK...\r\n          </Button>\r\n        </div>\r\n        <div className=\"uk-section\">\r\n          <div className=\"uk-container\">\r\n            <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n              <span>{props.location.postTitle}\r\n              </span>\r\n              <a className=\"uk-text-small\" href=\"#\"> Author\r\n              </a>\r\n            </h1>\r\n            <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n              <p>\r\n                {props.location.postBody}.\r\n              </p>\r\n            </div>\r\n            <hr />\r\n            <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n            {\r\n              comments?.map((comment) => (\r\n                comment.path === props.location.pathname ?\r\n                  <Comments\r\n                    key={comment.id}\r\n                    id={comment.id}\r\n                    author={comment.author}\r\n                    email={comment.email}\r\n                    commentTitle={comment.commentTitle}\r\n                  />\r\n                  : null\r\n              ))\r\n            }\r\n            <hr />\r\n            <form action=\"#\" className=\"uk-comment-form uk-margin-medium-top\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-legend\">Add Comment</legend>\r\n                <div className=\"uk-margin\">\r\n                  <input\r\n                    className=\"uk-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                    value={author}\r\n                    onChange={onAddAuthor}\r\n                    onKeyPress={onKeyPressDefault}\r\n                  />\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <input\r\n                    className=\"uk-input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onAddEmail}\r\n                    onKeyPress={onKeyPressDefault}\r\n                  />\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <textarea\r\n                    className=\"uk-textarea\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Comment\"\r\n                    required\r\n                    value={commentTitle}\r\n                    onChange={onAddComment}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <button className=\"uk-button uk-button-primary\" type=\"submit\"\r\n                    onClick={onClickDataSend}>\r\n                    Post Comment\r\n                  </button>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.commentsReducer.comments,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCommentsRequest,\r\n  createCommentsRequest\r\n}\r\n\r\nexport default React.memo(connect(mapStateToProps,\r\n  mapDispatchToProps)(Post));","export const viewStatus = {\r\n  list: 0,\r\n  grid: 1,\r\n};","import { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDebounce } from \"../Hooks/UseDebounce\";\r\nimport React from \"react\";\r\nimport {\r\n  getSortPostsRequest,\r\n  getSearchPostsRequest\r\n} from \"../store/actions/index\";\r\nimport { viewStatus } from \"../utils/enums\"\r\n\r\nfunction Filters(props) {\r\n  const {\r\n    viewType,\r\n    setViewType,\r\n    setQuantityPosts,\r\n    postsQuantityPage,\r\n    getSortPostsRequest,\r\n    getSearchPostsRequest } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [orderValue, setOrderValue] = useState(\"asc\");\r\n  const [, setSearchResults] = useState([]);\r\n  const debouncedValue = useDebounce(name, 500);\r\n\r\n  useEffect((value) => {\r\n    if (value !== value) {\r\n      getSortPostsRequest(value);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      setIsSearching(true);\r\n      getSearchPostsRequest(debouncedValue)\r\n        .then((results) => {\r\n          setIsSearching(false);\r\n          setSearchResults(results)\r\n        })\r\n    } else if (isSearching === true) {\r\n      setSearchResults([]);\r\n      getSortPostsRequest(orderValue);\r\n      setIsSearching(false);\r\n    }\r\n  },\r\n    [debouncedValue]\r\n  )\r\n\r\n  const onPostsOrderChange = (e) => {\r\n    getSortPostsRequest(e.target.value);\r\n    setOrderValue(e.target.value);\r\n  }\r\n\r\n  const activeList = viewType === viewStatus.list ? \"uk-active\" : \"\";\r\n  const activeGrid = viewType === viewStatus.grid ? \"uk-active\" : \"\";\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-margin-medium-bottom uk-flex\">\r\n      <form\r\n        className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n        <span uk-search-icon=\"true\"></span>\r\n        {isSearching && <span\r\n          className=\"uk-search-icon uk-search-icon-flip\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        ></span>}\r\n        <input\r\n          value={name}\r\n          onKeyPress={onKeyPressDefault}\r\n          onChange={(e) => { setIsSearching(true); setName(e.target.value); }}\r\n          className=\"uk-search-input\"\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </form>\r\n      <select value={orderValue}\r\n        className=\"uk-select uk-width-small uk-margin-auto-left\"\r\n        onChange={onPostsOrderChange}>\r\n        <option value=\"asc\">ASC</option>\r\n        <option value=\"desc\">DESC</option>\r\n      </select>\r\n      <select value={postsQuantityPage}\r\n        className=\"uk-select uk-width-small uk-margin-left\"\r\n        onChange={(e) => setQuantityPosts(e.target.value)}>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"12\">12</option>\r\n        <option value=\"24\">24</option>\r\n      </select>\r\n      <div className=\"uk-button-group uk-margin-left\">\r\n        <button\r\n          className={`uk-button uk-button-default ${activeList}`}\r\n          onClick={() => { setViewType(viewStatus.list) }}>\r\n          <span uk-icon=\"icon:  grid\"></span>\r\n        </button>\r\n        <button\r\n          className={`uk-button uk-button-default ${activeGrid}`}\r\n          onClick={() => { setViewType(viewStatus.grid) }}>\r\n          <span uk-icon=\"icon:  list\"></span>\r\n        </button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getSearchPostsRequest,\r\n  getSortPostsRequest\r\n}\r\n\r\nexport default React.memo(connect(null,\r\n  mapDispatchToProps)(Filters));","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsLists.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsLists({\r\n  body,\r\n  title,\r\n  id,\r\n  toggleFavorite,\r\n  favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom \r\n        uk-child-width-1-2@s uk-grid-collapse uk-margin\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container\">\r\n          <img src=\"https://picsum.photos/600/400\" alt=\"\" uk-cover=\"true\" />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className=\"uk-card-title uk-margin-remove-bottom\r\n             uk-flex uk-flex-middle uk-flex-between\">\r\n              {title && `${title.slice(0, 13)}...`}\r\n              <a href=\"/\" className={favoritePost\r\n                ? \"uk-icon-link favorite-active\"\r\n                : \"uk-icon-link\"}\r\n                uk-icon=\"heart\"\r\n                onClick={onClickFavorite}></a>\r\n            </h3>\r\n            <p>\r\n              {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n            </p>\r\n            <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }}\r\n              className=\"uk-button uk-button-text\" >\r\n              Read more\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nPostscardPostsLists.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsLists);","import React from \"react\";\r\nimport PostscardPostsLists\r\n  from \"./PostscardPostsLists/PostscardPostsLists\";\r\n\r\nexport function PostslistsView({\r\n  currentPageCards,\r\n  toggleFavorite }) {\r\n  return (\r\n    <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-2@m\">\r\n      {currentPageCards?.map((post) => {\r\n        return <PostscardPostsLists key={post.id}\r\n          title={post.title}\r\n          id={post.id}\r\n          body={post.body}\r\n          toggleFavorite={toggleFavorite}\r\n          favoritePost={post.favoritePost}\r\n        />\r\n      })}\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsgrid.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsgrid({\r\n  body,\r\n  title,\r\n  id,\r\n  toggleFavorite,\r\n  favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom\">\r\n        <div className=\"uk-card-header\">\r\n          <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n            {title && `${title.slice(0, 13)}...`}\r\n            <a href=\"/\" className={favoritePost\r\n              ? \"uk-icon-link favorite-active\"\r\n              : \"uk-icon-link\"}\r\n              uk-icon=\"heart\"\r\n              onClick={onClickFavorite}></a>\r\n          </h3>\r\n        </div>\r\n        <div className=\"uk-card-body\">\r\n          <p>\r\n            {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n          </p>\r\n        </div>\r\n        <div className=\"uk-card-footer\">\r\n          <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }}\r\n            className=\"uk-button uk-button-text\" >\r\n            Read more\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostscardPostsgrid.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsgrid);","import React from \"react\";\r\nimport PostscardPostsgrid\r\n  from \"./PostscardPostsgrid/PostscardPostsgrid\";\r\n\r\nexport function PostsgridView({\r\n  currentPageCards,\r\n  toggleFavorite }) {\r\n  return (\r\n    <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n      {currentPageCards?.map((post) => (\r\n        <PostscardPostsgrid key={post.id}\r\n          title={post.title}\r\n          id={post.id}\r\n          body={post.body}\r\n          toggleFavorite={toggleFavorite}\r\n          favoritePost={post.favoritePost}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Pagination } from \"../components/Pagination\";\r\nimport Filters from \"../components/Filters\";\r\nimport { LMButton } from \"../components/LMButton\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport { PostslistsView } from \"../components/PostslistsView\";\r\nimport { PostsgridView } from \"../components/PostsgridView\";\r\nimport { toggleFavoritePostsRequest } from \"../store/actions/index\"\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\nimport { viewStatus } from \"../utils/enums\"\r\n\r\nfunction Posts(props) {\r\n  const [viewType, setViewType] = useState(viewStatus.list)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsQuantityPage, setPostsQuantityPage] = useState(6);\r\n\r\n  const { posts, toggleFavoritePostsRequest } = props;\r\n  const indexOfLastPost = currentPage * postsQuantityPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsQuantityPage;\r\n  const totalPosts = Math.ceil(posts.length / postsQuantityPage);\r\n  const currentPageCards = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const addMoreCards = (value) => {\r\n    const addCards = (parseInt(value) + 6);\r\n    setPostsQuantityPage(addCards);\r\n  }\r\n\r\n  const setQuantityPosts = (value) => {\r\n    setPostsQuantityPage(value);\r\n  }\r\n\r\n  const toggleFavoritePosts = (id) => {\r\n    posts?.map((post) => {\r\n      if (post.id === id && post.favoritePost === undefined) {\r\n        post.favoritePost = true;\r\n        toggleFavoritePostsRequest(id, post.favoritePost);\r\n      } else if (post.id === id && post.favoritePost === false) {\r\n        post.favoritePost = true;\r\n        toggleFavoritePostsRequest(id, post.favoritePost);\r\n      } else if (post.id === id && post.favoritePost === true) {\r\n        post.favoritePost = false;\r\n        toggleFavoritePostsRequest(id, post.favoritePost);\r\n      }\r\n      return post;\r\n    })\r\n  }\r\n\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation\r\n        toggleFavorite={toggleFavoritePosts}\r\n      />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters\r\n            setQuantityPosts={setQuantityPosts}\r\n            viewType={viewType}\r\n            setViewType={setViewType}\r\n            postsQuantityPage={postsQuantityPage}\r\n          />\r\n          {currentPageCards.length > 0 ?\r\n            viewType === viewStatus.list ?\r\n              <PostslistsView\r\n                currentPageCards={currentPageCards}\r\n                toggleFavorite={toggleFavoritePosts}\r\n              /> :\r\n              <PostsgridView\r\n                currentPageCards={currentPageCards}\r\n                toggleFavorite={toggleFavoritePosts}\r\n              />\r\n            : <div className=\"uk-align-center\">\r\n              <Result\r\n                icon={<FrownTwoTone />}\r\n                title=\"Sorry, posts not found.\"\r\n              />\r\n            </div>\r\n          }\r\n          <LMButton\r\n            postsOrAlbums={posts}\r\n            postsQuantityPage={postsQuantityPage}\r\n            addMoreCards={addMoreCards}\r\n          />\r\n          <Pagination\r\n            totalPosts={totalPosts}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div >\r\n    </main >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.postsReducer.posts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleFavoritePostsRequest,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React,\n{ useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Albums from \"./containers/Albums\";\nimport Post from \"./components/Post/Post\";\nimport Posts from \"./containers/Posts\";\nimport ScrollToTop from \"./Hooks/ScrollToTop\";\nimport {\n  getPostsRequest,\n  getAlbumsRequest,\n  toggleFavoritePostsRequest,\n  toggleFavoriteAlbumsRequest\n} from \"./store/actions/index\";\nimport { Result } from 'antd';\n\nfunction App(props) {\n  const [errorFetch, setErrorFetch] = useState(null);\n  const { getPostsRequest,\n    getAlbumsRequest,\n    toggleFavoritePostsRequest,\n    toggleFavoriteAlbumsRequest } = props;\n\n  useEffect(() => {\n    if (location.pathname === \"/\") {\n      getPostsRequest()\n        .catch(error => setErrorFetch(error));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (location.pathname === \"/Albums\") {\n      getAlbumsRequest()\n        .catch(error => setErrorFetch(error));\n    }\n  }, []);\n\n\n  useEffect((favorite) => {\n    if (favorite !== favorite) {\n      toggleFavoritePostsRequest(id);\n      toggleFavoriteAlbumsRequest(id);\n    }\n  }, []);\n\n  if (errorFetch) {\n    return <Result\n      status=\"500\"\n      title=\"500\"\n      subTitle=\"Sorry, something went wrong.\"\n    />\n  } else {\n    return (\n      <BrowserRouter>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/\" component={Posts} />\n          <Route exact path=\"/Albums\" component={Albums} />\n          <Route exact path=\"/Post/:id\" component={Post} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.postsReducer.posts,\n    albums: state.albumsReducer.albums,\n  }\n}\n\nconst mapDispatchToProps = {\n  getPostsRequest,\n  getAlbumsRequest,\n  toggleFavoritePostsRequest,\n  toggleFavoriteAlbumsRequest\n}\n\n\nexport default React.memo(connect(mapStateToProps,\n  mapDispatchToProps)(App));","import React, { StrictMode } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport 'antd/dist/antd.css';\nimport ReactDOM from \"react-dom\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.css\";\nimport App from \"./App\";\nUikit.use(Icons);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}